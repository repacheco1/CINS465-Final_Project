# Generated by Django 3.0.5 on 2020-04-30 01:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import foodfficient.models
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, unique=True)),
                ('content', models.TextField()),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('published_on', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-published_on'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('prep_time', models.IntegerField()),
                ('cook_time', models.IntegerField()),
                ('total_time', models.IntegerField()),
                ('servings', models.IntegerField()),
                ('cuisine', models.IntegerField(choices=[(1, 'Ainu'), (2, 'Albanian'), (3, 'Argentine'), (4, 'Andhra'), (5, 'Anglo-Indian'), (6, 'Arab'), (7, 'Armenian'), (8, 'Assyrian'), (9, 'Awadhi'), (10, 'Azerbaijani'), (11, 'Balochi'), (12, 'Belarusian'), (13, 'Bangladeshi'), (14, 'Bengali'), (15, 'Berber'), (16, 'Brazilian'), (17, 'Buddhist'), (18, 'Bulgarian'), (19, 'Cajun'), (20, 'Cantonese'), (21, 'Caribbean'), (22, 'Chechen'), (23, 'Chinese'), (24, 'ChineseIslamic'), (25, 'Circassian'), (26, 'Crimean Tatar'), (27, 'Cypriot'), (28, 'Danish'), (29, 'English'), (30, 'Estonian'), (31, 'French'), (32, 'Filipino'), (33, 'Georgian'), (34, 'German'), (35, 'Goan'), (36, 'Goan Catholic'), (37, 'Greek'), (38, 'Gujarati'), (39, 'Hyderabad'), (40, 'Indian'), (41, 'Indian Chinese'), (42, 'Indian Singaporean'), (43, 'Indonesian'), (44, 'Inuit'), (45, 'Irish'), (46, 'Italian-American'), (47, 'Italian'), (48, 'Jamaican'), (49, 'Japanese'), (50, 'Jewish'), (51, 'Karnataka'), (52, 'Kazakh'), (53, 'Keralite'), (54, 'Korean'), (55, 'Kurdish'), (56, 'Laotian'), (57, 'Lebanese'), (58, 'Latvian'), (59, 'Lithuanian'), (60, 'Louisiana Creole'), (61, 'Maharashtrian'), (62, 'Mangalorean'), (63, 'Malay'), (64, 'Malaysian Chinese'), (65, 'Malaysian Indian'), (66, 'Mediterranean'), (67, 'Mexican'), (68, 'Mordovian'), (69, 'Mughal'), (70, 'Native American'), (71, 'Nepalese'), (72, 'New Mexican'), (73, 'Odia'), (74, 'Parsi'), (75, 'Pashtun'), (76, 'Polish'), (77, 'Pennsylvania Dutch'), (78, 'Pakistani'), (79, 'Peranakan'), (80, 'Persian'), (81, 'Peruvian'), (82, 'Portuguese'), (83, 'Punjabi'), (84, 'Rajasthani'), (85, 'Romanian'), (86, 'Russian'), (87, 'Sami'), (88, 'Serbian'), (89, 'Sindhi'), (90, 'Slovak'), (91, 'Slovenian'), (92, 'Somali'), (93, 'SouthIndian'), (94, 'Soviet'), (95, 'Spanish'), (96, 'SriLankan'), (97, 'Taiwanese'), (98, 'Tatar'), (99, 'Thai'), (100, 'Turkish'), (101, 'Tamil'), (102, 'Udupi'), (103, 'Ukrainian'), (104, 'Vietnamese'), (105, 'Yamal'), (106, 'Zambian'), (107, 'Zanzibari')])),
                ('diet', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Dairy Free'), (2, 'Gluten Free'), (3, 'Keto'), (4, 'Vegan'), (5, 'Vegetarian')], max_length=9)),
                ('image', models.ImageField(blank=True, max_length=500, null=True, upload_to=foodfficient.models.upload_to_recipies)),
                ('description', models.TextField()),
                ('ingredients', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('instructions', models.TextField()),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, max_length=500, null=True, upload_to=foodfficient.models.upload_to_avatars)),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=35)),
                ('facebook', models.CharField(blank=True, max_length=50)),
                ('instagram', models.CharField(blank=True, max_length=50)),
                ('pinterest', models.CharField(blank=True, max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=500)),
                ('published_on', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('entry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='foodfficient.Blog')),
            ],
            options={
                'ordering': ['-published_on'],
            },
        ),
    ]
